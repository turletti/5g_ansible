---
- name: Upload kubeadm config to the master node
  copy:
    src: kubeadm-config.yaml
    dest: /root/kubeadm-config.yaml
    mode: '0644'
  become: true

- name: Initialize Kubernetes cluster with kubeadm config
  command: kubeadm init --config kubeadm-config.yaml
  register: kubeadm_init
  failed_when: kubeadm_init.rc != 0
  changed_when: kubeadm_init.rc == 0

- name: Create .kube directory in user's home
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0700'

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config"
    remote_src: yes
    mode: '0600'

- name: Wait 10 seconds for cluster to be ready
  pause:
    seconds: 10

- name: Remove NoSchedule taint from master node
  command: kubectl taint nodes --all node-role.kubernetes.io/control-plane:NoSchedule-
  register: taint_out
  failed_when: false

# Run once, on the master
- name: Extract kubeadm join command
  command: kubeadm token create --print-join-command
  register: join_command
  run_once: true
  delegate_to: "{{ groups['core_node'][0] }}"

- name: Save join command to controller
  copy:
    dest: "./kubeadm_join_command.txt"
    content: "{{ join_command.stdout }}"
  delegate_to: localhost
  run_once: true

# Make sure all hosts can load it
- name: Read join command from file
  slurp:
    src: "./kubeadm_join_command.txt"
  delegate_to: localhost
  run_once: true
  register: join_file

- name: Set join command fact for all nodes
  set_fact:
    kubeadm_join_command: "{{ join_file['content'] | b64decode | trim }}"