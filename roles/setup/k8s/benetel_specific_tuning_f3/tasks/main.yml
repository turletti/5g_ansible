---
- name: Ensure CPUAffinity is set in system.conf
  lineinfile:
    path: /etc/systemd/system.conf
    regexp: '^CPUAffinity='
    line: 'CPUAffinity=0-3'
    state: present

- name: Reload sysctl
  command: sysctl -p

- name: Reload systemd config
  command: systemctl daemon-reexec

- name: Add Kubernetes and RT settings to sysctl.conf
  blockinfile:
    path: /etc/sysctl.conf
    insertafter: EOF
    block: |
      ## For kubernetes
      fs.inotify.max_user_instances=65536
      ## Realtime kernel settings
      kernel.sched_rt_runtime_us=-1
      kernel.timer_migration=0
    marker: "# {mark} RAN tuning"

- name: Write kubelet config and apply static CPU options
  copy:
    dest: /var/lib/kubelet/config.yaml
    owner: root
    group: root
    mode: '0644'
    content: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      authentication:
        anonymous:
          enabled: false
        webhook:
          cacheTTL: 0s
          enabled: true
        x509:
          clientCAFile: /etc/kubernetes/pki/ca.crt
      authorization:
        mode: Webhook
        webhook:
          cacheAuthorizedTTL: 0s
          cacheUnauthorizedTTL: 0s
      cgroupDriver: systemd
      clusterDNS:
      - 10.96.0.10
      clusterDomain: cluster.local
      containerLogMaxSize: 50Mi
      containerRuntimeEndpoint: ""
      cpuManagerPolicy: static
      cpuManagerPolicyOptions:
        "full-pcpus-only": "true"
      cpuManagerReconcilePeriod: 0s
      crashLoopBackOff: {}
      evictionPressureTransitionPeriod: 0s
      failSwapOn: false
      featureGates:
        CPUManager: true
        CPUManagerPolicyOptions: true
        CPUManagerPolicyBetaOptions: true
      fileCheckFrequency: 0s
      healthzBindAddress: 127.0.0.1
      healthzPort: 10248
      httpCheckFrequency: 0s
      imageMaximumGCAge: 0s
      imageMinimumGCAge: 0s
      kind: KubeletConfiguration
      logging:
        flushFrequency: 0
        options:
          json:
            infoBufferSize: "0"
          text:
            infoBufferSize: "0"
        verbosity: 0
      memorySwap: {}
      nodeStatusReportFrequency: 0s
      nodeStatusUpdateFrequency: 0s
      reservedSystemCPUs: 0-3
      resolvConf: /run/systemd/resolve/resolv.conf
      rotateCertificates: true
      runtimeRequestTimeout: 0s
      shutdownGracePeriod: 0s
      shutdownGracePeriodCriticalPods: 0s
      staticPodPath: /etc/kubernetes/manifests
      streamingConnectionIdleTimeout: 0s
      syncFrequency: 0s
      volumeStatsAggPeriod: 0s

- name: Patch kube-proxy DaemonSet to use custom config file
  shell: |
    kubectl -n kube-system patch daemonset kube-proxy --patch "$(cat <<EOF
    spec:
      template:
        spec:
          containers:
          - name: kube-proxy
            command:
            - /usr/local/bin/kube-proxy
            - --config=/var/lib/kube-proxy/kubeproxy-config.yaml
            volumeMounts:
            - name: kube-proxy-config
              mountPath: /var/lib/kube-proxy
          volumes:
          - name: kube-proxy-config
            hostPath:
              path: /etc/kubernetes
              type: Directory
    EOF
    )"
  delegate_to: "{{ groups['core_node'][0] }}"

- name: Remove kubelet CPU manager checkpoint file
  ansible.builtin.file:
    path: /var/lib/kubelet/cpu_manager_state
    state: absent
  become: true

- name: Restart kubelet
  systemd:
    name: kubelet
    state: restarted
