---
# Debian/Ubuntu
- name: Install prerequisites (Debian/Ubuntu)
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Ensure apt keyrings directory exists
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Remove all Docker APT sources to avoid conflicts
  lineinfile:
    path: /etc/apt/sources.list.d/docker.list
    state: absent
    regexp: '^deb.*download\.docker\.com/linux/ubuntu'
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Remove legacy Docker key(s)
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/keyrings/docker.asc
    - /etc/apt/trusted.gpg.d/docker.gpg
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Add Docker GPG key
  ansible.builtin.shell: |
    curl -fsSL https://download.docker.com/linux/{{ ansible_facts['distribution'] | lower }}/gpg \
      | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Add Docker APT repository (clean)
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Update APT cache
  apt:
    update_cache: yes
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Install containerd (Debian/Ubuntu)
  apt:
    name: containerd.io
    state: present
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Create /etc/containerd directory
  file:
    path: /etc/containerd
    state: directory
  become: true

- name: Generate default containerd config
  command: containerd config default
  register: containerd_cfg
  changed_when: false
  become: true

- name: Write config.toml
  copy:
    dest: /etc/containerd/config.toml
    content: "{{ containerd_cfg.stdout }}"
  become: true

- name: Enable systemd-cgroup
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'
  become: true

- name: Switch snapshotter to native
  replace:
    path: /etc/containerd/config.toml
    regexp: 'snapshotter = "overlayfs"'
    replace: 'snapshotter = "native"'
  become: true

- name: Restart & enable containerd
  systemd:
    name: containerd
    enabled: yes
    state: restarted
  become: true

- name: Debug Docker sources (after cleanup)
  shell: grep -R "docker" /etc/apt/sources.list.d/ || true
  register: docker_sources
  changed_when: false
  when: ansible_facts['os_family'] == 'Debian'

- debug:
    msg: "{{ docker_sources.stdout_lines }}"
  when: ansible_facts['os_family'] == 'Debian'
