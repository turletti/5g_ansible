---

# Debian/Ubuntu
- name: Install prerequisites (Debian/Ubuntu)
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Add Docker GPG key (Debian/Ubuntu)
  ansible.builtin.shell: |
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/{{ ansible_facts['distribution'] | lower }}/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Add Docker GPG apt key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true
  when: ansible_facts.os_family == 'Debian'

- name: Add Docker APT repository
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
    filename: docker
  become: true
  when: ansible_facts.os_family == 'Debian'

- name: Install containerd (Debian/Ubuntu)
  ansible.builtin.apt:
    name: containerd.io
    state: present
    update_cache: yes
  become: true
  when: ansible_facts.os_family == 'Debian'   


#- name: Add Docker repo (Debian/Ubuntu)
#  copy:
#    dest: /etc/apt/sources.list.d/docker.list
#    content: |
#      deb [arch={{ ansible_facts['architecture'] }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_facts['distribution'] | lower }} {{ ansible_facts['distribution_#release'] }} stable
#    mode: '0644'
#  become: true
#  when: ansible_facts['os_family'] == 'Debian'

#- name: Install containerd (Debian/Ubuntu)
#  apt:
#    name: containerd.io
#    state: present
#    update_cache: yes
#  become: true
#  when: ansible_facts['os_family'] == 'Debian'

# RHEL/CentOS/Alma/Rocky
- name: Install prerequisites (RHEL family)
  yum:
    name:
      - dnf-plugins-core
      - curl
      - ca-certificates
    state: present
  become: true
  when: ansible_facts['os_family'] == 'RedHat'

- name: Add Docker repo (RHEL family)
  command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  args:
    creates: /etc/yum.repos.d/docker-ce.repo
  become: true
  when: ansible_facts['os_family'] == 'RedHat'

- name: Install containerd (RHEL family)
  yum:
    name: containerd.io
    state: present
  become: true
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create /etc/containerd directory
  file:
    path: /etc/containerd
    state: directory
  become: true

- name: Generate default containerd config
  command: containerd config default
  register: containerd_cfg
  changed_when: false
  become: true

- name: Write config.toml
  copy:
    dest: /etc/containerd/config.toml
    content: "{{ containerd_cfg.stdout }}"
  become: true

- name: Enable systemd-cgroup
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'
  become: true

- name: Switch snapshotter to native
  replace:
    path: /etc/containerd/config.toml
    regexp: 'snapshotter = "overlayfs"'
    replace: 'snapshotter = "native"'
  become: true

- name: Restart & enable containerd
  systemd:
    name: containerd
    enabled: yes
    state: restarted
  become: true
