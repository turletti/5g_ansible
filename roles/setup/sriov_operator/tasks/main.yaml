---
- name: RESTART_HERE
  ansible.builtin.meta: noop

- name: Update APT package cache
  apt:
    update_cache: yes
  become: true

- name: Install Go
  become: yes
  block:
    - name: Download Go
      ansible.builtin.get_url:
        url: https://dl.google.com/go/go1.24.6.linux-amd64.tar.gz
        dest: /tmp/go1.24.6.linux-amd64.tar.gz
        mode: '0644'
        timeout: 60
        validate_certs: yes

    - name: Extract Go to /usr/local
      ansible.builtin.unarchive:
        src: /tmp/go1.24.6.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes
        creates: /usr/local/go

    - name: Create GOPATH directory
      ansible.builtin.file:
        path: /opt/gopath
        state: directory
        mode: '0755'

    - name: Set up Go environment via profile script
      ansible.builtin.copy:
        content: |
          export GOROOT=/usr/local/go
          export GOPATH=/opt/gopath
          export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
        dest: /etc/profile.d/golang.sh
        mode: '0755'

    - name: Create symbolic link from /usr/local/go/bin/go to /usr/local/bin/go
      file:
        src: /usr/local/go/bin/go
        dest: /usr/local/bin/go
        state: link   

    - name: Clean up downloaded archive
      ansible.builtin.file:
        path: /tmp/go1.24.6.linux-amd64.tar.gz
        state: absent

- name: Deploy SR-IOV Network Operator
  block:
    - name: Install git (if not already installed)
      ansible.builtin.package:
        name: git
        state: present   

    - name: Clone SR-IOV Network Operator
      ansible.builtin.git:
        repo: https://github.com/k8snetworkplumbingwg/sriov-network-operator.git
        dest: /root/sriov-network-operator
        clone: yes
        update: yes
        version: master

    - name: Ensure cert-manager is installed
      kubernetes.core.k8s:
        state: present
        src: https://github.com/jetstack/cert-manager/releases/download/v1.3.0/cert-manager.yaml

    # --- WAIT for cert-manager to be ready ---
    - name: Wait for cert-manager CRDs to exist
      kubernetes.core.k8s_info:
        api_version: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        name: issuers.cert-manager.io
      register: issuer_crd
      until: issuer_crd.resources | length > 0
      retries: 20
      delay: 5

    - name: Wait for cert-manager webhook deployment to be available
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        namespace: cert-manager
        name: cert-manager-webhook
      register: webhook_deploy
      until: webhook_deploy.resources[0].status.availableReplicas is defined and webhook_deploy.resources[0].status.availableReplicas|int > 0
      retries: 30
      delay: 10

    - name: Create namespace sriov-network-operator
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: sriov-network-operator
        state: present

    # --- WAIT for namespace to be active (instead of pause) ---
    - name: Wait for sriov-network-operator namespace to exist
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Namespace
        name: sriov-network-operator
      register: sriov_ns
      until: sriov_ns.resources | length > 0
      retries: 10
      delay: 3

    - name: Apply Issuer and Certificates
      kubernetes.core.k8s:
        state: present
        definition: |
          apiVersion: cert-manager.io/v1
          kind: Issuer
          metadata:
            name: sriov-network-operator-selfsigned-issuer
            namespace: sriov-network-operator
          spec:
            selfSigned: {}
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: operator-webhook-cert
            namespace: sriov-network-operator
          spec:
            secretName: operator-webhook-cert
            dnsNames:
            - operator-webhook-service.sriov-network-operator.svc
            issuerRef:
              name: sriov-network-operator-selfsigned-issuer
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: network-resources-injector-cert
            namespace: sriov-network-operator
          spec:
            secretName: network-resources-injector-cert
            dnsNames:
            - network-resources-injector-service.sriov-network-operator.svc
            issuerRef:
              name: sriov-network-operator-selfsigned-issuer

    # --- WAIT for certs to be issued (instead of pause) ---
    - name: Wait for Certificates to be issued
      kubernetes.core.k8s_info:
        api_version: cert-manager.io/v1
        kind: Certificate
        namespace: sriov-network-operator
      register: sriov_certs
      until: >
        sriov_certs.resources | selectattr('status.conditions', 'defined')
        | selectattr('status.conditions', 'search', 'Ready')
        | selectattr('status.conditions', 'search', 'True')
        | list | length > 0
      retries: 30
      delay: 10

    - name: Ensure source and destination directories exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - /root/sriov-network-operator/config/crd/bases
        - /root/sriov-network-operator/config/crd

    - name: Find all CRD YAML files in bases (exclude kustomization.yaml)
      find:
        paths: /root/sriov-network-operator/config/crd/bases
        patterns: "*.yaml"
        excludes: "kustomization.yaml"
        file_type: file
      register: crd_files

    - name: Create kustomization.yaml in bases directory
      copy:
        content: |
          apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          resources:
          {% for file in crd_files.files %}
            - {{ file.path | basename }}
          {% endfor %}
        dest: /root/sriov-network-operator/config/crd/bases/kustomization.yaml

    - name: Build list of all files to copy (CRDs + kustomization.yaml)
      set_fact:
        all_files_to_copy: |
          {% set files = [] %}
          {% for file in crd_files.files %}
          {%   set _ = files.append(file.path) %}
          {% endfor %}
          {% set _ = files.append('/root/sriov-network-operator/config/crd/bases/kustomization.yaml') %}
          {{ files }}

    - name: Copy all YAML files (including kustomization.yaml) to crd directory on remote
      copy:
        src: "{{ item }}"
        dest: /root/sriov-network-operator/config/crd/
        remote_src: yes
      loop: "{{ all_files_to_copy }}"
      
    - name: Deploy SR-IOV Operator via Make
      ansible.builtin.shell: |
        export ADMISSION_CONTROLLERS_ENABLED=true
        export ADMISSION_CONTROLLERS_CERTIFICATES_CERT_MANAGER_ENABLED=true
        make deploy-setup-k8s
      args:
        chdir: /root/sriov-network-operator

- name: Verify SR-IOV Network Operator deployment
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: sriov-network-operator
  register: sriov_pods

- name: Debug deployed pods
  ansible.builtin.debug:
    var: sriov_pods.resources