---
- name: RESTART_HERE
  ansible.builtin.meta: noop

- name: Update APT package cache
  apt:
    update_cache: yes
  become: true

- name: Install Go
  become: yes
  block:
    - name: Download Go
      ansible.builtin.get_url:
        url: https://dl.google.com/go/go1.24.6.linux-amd64.tar.gz
        dest: /tmp/go1.24.6.linux-amd64.tar.gz
        mode: '0644'
        timeout: 60
        validate_certs: yes

    - name: Extract Go to /usr/local
      ansible.builtin.unarchive:
        src: /tmp/go1.24.6.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes
        creates: /usr/local/go

    - name: Create GOPATH directory
      ansible.builtin.file:
        path: /opt/gopath
        state: directory
        mode: '0755'

    - name: Set up Go environment via profile script
      ansible.builtin.copy:
        content: |
          export GOROOT=/usr/local/go
          export GOPATH=/opt/gopath
          export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
        dest: /etc/profile.d/golang.sh
        mode: '0755'

    - name: Clean up downloaded archive
      ansible.builtin.file:
        path: /tmp/go1.24.6.linux-amd64.tar.gz
        state: absent

- name: Deploy SR-IOV Network Operator
  block:
    - name: Install git (if not already installed)
      ansible.builtin.package:
        name: git
        state: present   

    - name: Clone SR-IOV Network Operator
      ansible.builtin.git:
        repo: https://github.com/k8snetworkplumbingwg/sriov-network-operator.git
        dest: /root/sriov-network-operator
        clone: yes
        update: yes
        version: master

    - name: Install Go dependency for sriov-network-operator
      ansible.builtin.shell: |
        /usr/local/go/bin/go get github.com/k8snetworkplumbingwg/sriov-network-operator
      args:
        chdir: /root/sriov-network-operator

    - name: Ensure cert-manager is installed
      kubernetes.core.k8s:
        state: present
        src: https://github.com/jetstack/cert-manager/releases/download/v1.3.0/cert-manager.yaml

    - name: Wait 5 seconds 
      pause:
        seconds: 5

    - name: Create namespace sriov-network-operator
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: sriov-network-operator
        state: present

    - name: Wait 5 seconds 
      pause:
        seconds: 5

    - name: Apply Issuer and Certificates
      kubernetes.core.k8s:
        state: present
        definition: |
          apiVersion: cert-manager.io/v1
          kind: Issuer
          metadata:
            name: sriov-network-operator-selfsigned-issuer
            namespace: sriov-network-operator
          spec:
            selfSigned: {}
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: operator-webhook-cert
            namespace: sriov-network-operator
          spec:
            secretName: operator-webhook-cert
            dnsNames:
            - operator-webhook-service.sriov-network-operator.svc
            issuerRef:
              name: sriov-network-operator-selfsigned-issuer
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: network-resources-injector-cert
            namespace: sriov-network-operator
          spec:
            secretName: network-resources-injector-cert
            dnsNames:
            - network-resources-injector-service.sriov-network-operator.svc
            issuerRef:
              name: sriov-network-operator-selfsigned-issuer

    - name: Wait 10 seconds 
      pause:
        seconds: 10
	
    - name: Find CRD files in bases/
      find:
        paths: "/root/sriov-network-operator/config/crd/bases"
        patterns: "*.yaml"
      register: crd_files

    - name: Create kustomization.yaml from found files
      copy:
        content: |
          apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          resources:
          {% for file in crd_files.files %}
            - {{ file.path | basename }}
          {% endfor %}
        dest: /root/sriov-network-operator/config/crd/bases/kustomization.yaml

    - name: Deploy SR-IOV Operator via Make
      ansible.builtin.shell: |
        export ADMISSION_CONTROLLERS_ENABLED=true
        export ADMISSION_CONTROLLERS_CERTIFICATES_CERT_MANAGER_ENABLED=true
        make deploy-setup-k8s
      args:
        chdir: /root/sriov-network-operator

- name: Verify SR-IOV Network Operator deployment
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: sriov-network-operator
  register: sriov_pods

- name: Debug deployed pods
  ansible.builtin.debug:
    var: sriov_pods.resources


