---
- name: RESTART_HERE
  ansible.builtin.meta: noop

- name: Update APT package cache
  apt:
    update_cache: yes
  become: true

- name: Install Go
  become: yes
  block:
    - name: Download Go
      ansible.builtin.get_url:
        url: https://dl.google.com/go/go1.24.6.linux-amd64.tar.gz
        dest: /tmp/go1.24.6.linux-amd64.tar.gz
        mode: '0644'
        timeout: 60
        validate_certs: yes

    - name: Extract Go to /usr/local
      ansible.builtin.unarchive:
        src: /tmp/go1.24.6.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes
        creates: /usr/local/go

    - name: Create GOPATH directory
      ansible.builtin.file:
        path: /opt/gopath
        state: directory
        mode: '0755'

    - name: Set up Go environment via profile script
      ansible.builtin.copy:
        content: |
          export GOROOT=/usr/local/go
          export GOPATH=/opt/gopath
          export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
        dest: /etc/profile.d/golang.sh
        mode: '0755'

    - name: Create symbolic link from /usr/local/go/bin/go to /usr/local/bin/go
      file:
        src: /usr/local/go/bin/go
        dest: /usr/local/bin/go
        state: link   

    - name: Clean up downloaded archive
      ansible.builtin.file:
        path: /tmp/go1.24.6.linux-amd64.tar.gz
        state: absent

- name: Deploy SR-IOV Operator with Certificates
  hosts: sopnode-f3
  become: true
  tasks:

    - name: Apply Issuer and Certificates
      kubernetes.core.k8s:
        state: present
        definition: |
          apiVersion: cert-manager.io/v1
          kind: Issuer
          metadata:
            name: sriov-network-operator-selfsigned-issuer
            namespace: sriov-network-operator
          spec:
            selfSigned: {}
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: operator-webhook-cert
            namespace: sriov-network-operator
          spec:
            secretName: operator-webhook-cert
            dnsNames:
            - operator-webhook-service.sriov-network-operator.svc
            issuerRef:
              name: sriov-network-operator-selfsigned-issuer
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: network-resources-injector-cert
            namespace: sriov-network-operator
          spec:
            secretName: network-resources-injector-cert
            dnsNames:
            - network-resources-injector-service.sriov-network-operator.svc
            issuerRef:
              name: sriov-network-operator-selfsigned-issuer

    - name: Wait for Certificates to be ready
      vars:
        cert_names:
          - operator-webhook-cert
          - network-resources-injector-cert
      block:
        - name: Check certificate status
          kubernetes.core.k8s_info:
            api_version: cert-manager.io/v1
            kind: Certificate
            namespace: sriov-network-operator
            name: "{{ item }}"
          register: cert_status
          loop: "{{ cert_names }}"
          until: >
            cert_status.resources | selectattr('status.conditions', 'defined')
            | selectattr('status.conditions', 'defined')
            | selectattr('status.conditions', 'selectattr("type","equalto","Ready")')
            | selectattr('status.conditions', 'selectattr("status","equalto","True")')
            | list | length == 1
          retries: 30
          delay: 10

    - name: Deploy SR-IOV Operator via Makefile
      ansible.builtin.command: make deploy-setup-k8s
      args:
        chdir: /root/sriov-network-operator
      environment:
        ADMISSION_CONTROLLERS_ENABLED: "true"
        ADMISSION_CONTROLLERS_CERTIFICATES_CERT_MANAGER_ENABLED: "true"

- name: Verify SR-IOV Network Operator deployment
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: sriov-network-operator
  register: sriov_pods

- name: Debug deployed pods
  ansible.builtin.debug:
    var: sriov_pods.resources