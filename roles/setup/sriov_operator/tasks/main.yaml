---
---
- name: Install SR-IOV CNI Plugin and Deploy Device Plugin
  hosts: k8s_nodes
  become: true
  vars:
    sriov_cni_version: "v0.11.0"
    sriov_device_plugin_version: "v0.11.0"
    sriov_cni_url: "https://github.com/k8snetworkplumbingwg/sriov-cni/releases/download/{{ sriov_cni_version }}/sriov-cni-linux-amd64"
    sriov_cni_bin_dir: "/opt/cni/bin"
    kube_config_dir: "/etc/cni/net.d"
    kube_system_namespace: "kube-system"

  tasks:
    - name: Create CNI bin directory if not exists
      file:
        path: "{{ sriov_cni_bin_dir }}"
        state: directory
        mode: '0755'

    - name: Download SR-IOV CNI binary
      get_url:
        url: "{{ sriov_cni_url }}"
        dest: "{{ sriov_cni_bin_dir }}/sriov"
        mode: '0755'
        force: yes
      when: ansible_architecture == "x86_64"

    - name: Verify SR-IOV CNI binary is present
      stat:
        path: "{{ sriov_cni_bin_dir }}/sriov"
      register: sriov_binary
    - assert:
        that:
          - sriov_binary.stat.exists
        fail_msg: "SR-IOV CNI binary was not installed correctly."

    - name: Confirm Multus CNI is installed (prerequisite)
      stat:
        path: "{{ sriov_cni_bin_dir }}/multus"
      register: multus_binary
    - assert:
        that:
          - multus_binary.stat.exists
        fail_msg: "Multus CNI not found. Install Multus before SR-IOV."

    # Deploy SR-IOV Device Plugin via Kubernetes DaemonSet (only on control plane or via kubectl node)
    - name: Deploy SR-IOV Device Plugin using kubectl (run once from control plane)
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: DaemonSet
          metadata:
            name: sriov-device-plugin
            namespace: "{{ kube_system_namespace }}"
            labels:
              app: sriov-device-plugin
          spec:
            selector:
              matchLabels:
                app: sriov-device-plugin
            template:
              metadata:
                labels:
                  app: sriov-device-plugin
              spec:
                containers:
                - name: sriovdp
                  image: "ghcr.io/k8snetworkplumbingwg/sriov-network-device-plugin:{{ sriov_device_plugin_version }}"
                  securityContext:
                    privileged: true
                  env:
                  - name: "SRIOV_NODE_NAME"
                    valueFrom:
                      fieldRef:
                        fieldPath: spec.nodeName
                  volumeMounts:
                  - name: device-plugin
                    mountPath: /var/lib/kubelet/device-plugins
                volumes:
                - name: device-plugin
                  hostPath:
                    path: /var/lib/kubelet/device-plugins
                tolerations:
                - key: node-role.kubernetes.io/master
                  operator: Exists
                  effect: NoSchedule
      delegate_to: "{{ groups['control_plane'][0] }}"
      run_once: true
      when: inventory_hostname in groups['control_plane'] or (groups['control_plane'] | first == inventory_hostname)

