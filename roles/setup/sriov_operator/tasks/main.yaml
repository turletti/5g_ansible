---
- name: RESTART_HERE
  ansible.builtin.meta: noop

- name: Update APT package cache
  apt:
    update_cache: yes
  become: true

- name: Install SR-IOV Network Operator
  ansible.builtin.shell: |
    set -e

    # Install kubectl if missing
    if ! command -v kubectl &> /dev/null; then
      echo "Installing kubectl..."
      curl -fsSL -o /tmp/kubectl https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl
      install -o root -g root -m 0755 /tmp/kubectl /usr/local/bin/kubectl
    fi

    # Install kustomize if missing
    if ! command -v kustomize &> /dev/null; then
      echo "Installing kustomize..."
      curl -sLo /tmp/kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v5.1.0/kustomize_v5.1.0_linux_amd64
      chmod +x /tmp/kustomize
      mv /tmp/kustomize /usr/local/bin/kustomize
    fi

    # Create temporary directory and clone operator repo
    TMPDIR=$(mktemp -d)
    git clone --depth 1 https://github.com/k8snetworkplumbingwg/sriov-network-operator.git "$TMPDIR/sriov-operator"

    # Generate kustomization.yaml safely
    mkdir -p "$TMPDIR/sriov-operator/config/crd/bases"
    echo "apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ovsnetworks.sriovnetwork.openshift.io.yaml
  - sriovibnetworks.sriovnetwork.openshift.io.yaml
  - sriovnetworknodepolicies.sriovnetwork.openshift.io.yaml
  - sriovnetworknodestates.sriovnetwork.openshift.io.yaml
  - sriovnetworkpoolconfigs.sriovnetwork.openshift.io.yaml
  - sriovnetworks.sriovnetwork.openshift.io.yaml
  - sriovoperatorconfigs.sriovnetwork.openshift.io.yaml" > "$TMPDIR/sriov-operator/config/crd/bases/kustomization.yaml"

    # Apply CRDs
    kubectl apply -k "$TMPDIR/sriov-operator/config/crd/bases"

    # Deploy operator manifests
    kubectl apply -k "$TMPDIR/sriov-operator/deployment/sriov-network-operator"

    # Wait for operator pods
    kubectl -n sriov-network-operator wait --for=condition=Ready pod -l name=sriov-network-operator --timeout=300s

    # Cleanup
    rm -rf "$TMPDIR"
  args:
    executable: /bin/bash