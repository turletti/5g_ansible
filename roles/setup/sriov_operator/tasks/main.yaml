---
- name: RESTART_HERE
  ansible.builtin.meta: noop

- name: Update APT package cache
  apt:
    update_cache: yes
  become: true

- name: Install Go
  become: yes
  block:
    - name: Download Go
      ansible.builtin.get_url:
        url: https://dl.google.com/go/go1.24.6.linux-amd64.tar.gz
        dest: /tmp/go1.24.6.linux-amd64.tar.gz
        mode: '0644'
        timeout: 60
        validate_certs: yes

    - name: Extract Go to /usr/local
      ansible.builtin.unarchive:
        src: /tmp/go1.24.6.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes
        creates: /usr/local/go

    - name: Create GOPATH directory
      ansible.builtin.file:
        path: /opt/gopath
        state: directory
        mode: '0755'

    - name: Set up Go environment via profile script
      ansible.builtin.copy:
        content: |
          export GOROOT=/usr/local/go
          export GOPATH=/opt/gopath
          export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
        dest: /etc/profile.d/golang.sh
        mode: '0755'

    - name: Create symbolic link from /usr/local/go/bin/go to /usr/local/bin/go
      file:
        src: /usr/local/go/bin/go
        dest: /usr/local/bin/go
        state: link   

    - name: Clean up downloaded archive
      ansible.builtin.file:
        path: /tmp/go1.24.6.linux-amd64.tar.gz
        state: absent

- name: Deploy SR-IOV Operator with CRDs and Certificates
  block:

    - name: Generate and apply SR-IOV CRDs
      shell: |
        make manifests kustomize
        ./bin/kustomize build config/crd | kubectl apply -f -
      args:
        chdir: /root/sriov-network-operator

    - name: Apply Issuer and Certificates
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', item) }}"
      loop:
        - /root/sriov-network-operator/config/cert/issuer.yaml
        - /root/sriov-network-operator/config/cert/certificate.yaml

    - name: Wait for certificates to be ready
      kubernetes.core.k8s_info:
        kind: Certificate
        namespace: sriov-network-operator
      register: sriov_certs
      until: sriov_certs.resources | selectattr('status.conditions', 'defined') | selectattr('status.conditions[0].type', 'equalto', 'Ready') | selectattr('status.conditions[0].status', 'equalto', 'True') | list | length > 0
      retries: 30
      delay: 10

    - name: Deploy SR-IOV Operator via Makefile
      command: >
        ADMISSION_CONTROLLERS_ENABLED=true
        ADMISSION_CONTROLLERS_CERTIFICATES_CERT_MANAGER_ENABLED=true
        make deploy-setup-k8s
      args:
        chdir: /root/sriov-network-operator
  become: true

- name: Verify SR-IOV Network Operator deployment
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: sriov-network-operator
  register: sriov_pods

- name: Debug deployed pods
  ansible.builtin.debug:
    var: sriov_pods.resources