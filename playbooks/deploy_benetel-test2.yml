---
- hosts: webshell
  gather_facts: false
  tasks:
    - name: Run pos reset in parallel for each sopnode
      ansible.builtin.command: >
        ansible-playbook -i inventory/hosts.ini playbooks/run_pos.yml --extra-vars "node={{ item }}" -c local
      args:
        chdir: "{{ playbook_dir | dirname }}"
      async: 1800
      poll: 0
      loop: "{{ groups['sopnodes'] }}"
      loop_control:
        label: "{{ item }}"
      register: prepare_jobs

    - name: Wait for all Sopnodes used to be reset
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 100
      delay: 10
      loop: "{{ prepare_jobs.results }}"
      loop_control:
        label: "{{ item.item }}"

- name: Setup Sopnodes
  hosts: sopnodes
  roles:
    - role: setup/common
    - role: setup/containerd
    - role: setup/k8s/k8s_setup
    - role: setup/ovs
    - role: setup/optimization/cpu

- name: Create and Setup Kubernetes Cluster On Master
  hosts: core_node
  roles:
    - role: setup/k8s/cluster_create
    - role: setup/cni
    - role: setup/storage
    - role: setup/sriov_operator

- name: Configure GRE Tunnel From Core Node to RAN Node
  hosts: core_node
  vars:
    ip: "{{ hostvars[groups['ran_node'][0]].ip }}"
  roles:
    - role: setup/gre_tunnel

- name: Configure GRE Tunnel From RAN Node to Core Node
  hosts: ran_node
  vars:
    ip: "{{ hostvars[groups['core_node'][0]].ip }}"
  roles:
    - role: setup/gre_tunnel

- name: Deploy Open5gs Core
  hosts: core_node
  roles:
    - role: 5g/core

- name: Setup iperf3 on UPFs
  hosts: core_node
  gather_facts: false
  roles:
    - role: scenarios/iperf/upf

- name: Join Kubernetes Cluster on Workers
  hosts: k8s_workers
  become: true
  roles:
    - role: setup/k8s/cluster_join
      when: groups['core_node'][0] != groups['ran_node'][0] or groups['core_node'][0] != groups['monitor_node'][0]

- name: Apply specific tuning on RAN Node if AW2s RRUs are used
  hosts: ran_node
  become: true
  roles:
    - role: setup/k8s/aw2s_specific_tuning
      when: hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther'] and groups['ran_node'][0] in ['sopnode-f1', 'sopnode-f2']
    - role: setup/k8s/aw2s_specific_tuning_f3
      when: hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther'] and groups['ran_node'][0] in ['sopnode-f3']
    - role: setup/k8s/benetel_specific_tuning_f3
      when: hostvars[groups['faraday'][0]].rru in ['benetel1', 'benetel2'] and groups['ran_node'][0] in ['sopnode-f3']
      

- name: Deploy 5G-Monarch for monitoring
  hosts: monitor_node
  roles:
    - role: monarch/deploy

#- name: Cleanup R2Lab
#  hosts: faraday
#  roles:
#    - role: r2lab/cleanup

#- name: Setup UEs on R2Lab
#  hosts: faraday
#  roles:
#    - role: r2lab/ue/setup

#- hosts: faraday
#  tasks:
#    - name: Stop all UEs previous connections on R2Lab
#      include_role:
#        name: r2lab/ue/stop
#      vars:
#        ue: "{{ item }}"
#      loop: "{{ groups['qhats'] }}"
#      loop_control:
#        label: "{{ item }}"
#      ignore_errors: true

#- name: Power ON RRU on R2Lab
#  hosts: faraday
#  roles:
##    - role: r2lab/rru

- name: Benetel PTP and DPDK setup
  hosts: ran_node
  become: true
  roles:
    - role: setup/optimization/nic
    - role: setup/netplan
    - role: benetel/ptp
    - role: benetel/dpdk_install
    - role: benetel/dpdk_config
    - role: benetel/sriov_nnp_create
    

- name: Deploy OAI RAN
  hosts: ran_node
  roles:
    - role: 5g/ran

- name: Launch 5G-Monarch monitoring
  hosts: monitor_node
  roles:
    - role: monarch/monitoring

#- hosts: faraday
#  tasks:
#    - name: Connect UEs on R2Lab to 5g network
#      include_role:
#        name: r2lab/ue/connect
#      vars:
#        ue: "{{ item }}"
#      loop: "{{ groups['qhats'] }}"
#      loop_control:
#        label: "{{ item }}"
#      ignore_errors: true
